{
  "info": {
    "_postman_id": "f7068baa-8f07-432c-8c40-b047bb5a7d08",
    "name": "Fish Market - User Service",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "chatgpt"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "{{base_url}}"
    },
    {
      "key": "api_prefix",
      "value": "{{api_prefix}}"
    }
  ],
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "GET /healthz",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/healthz",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "healthz"
              ]
            },
            "description": "Health check of the service."
          }
        }
      ]
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "POST /auth/register (public)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}{{api_prefix}}/auth/register",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "{{api_prefix}}",
                "auth",
                "register"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"full_name\": \"{{full_name}}\",\n  \"email\": \"sandip+{{$timestamp}}@example.com\",\n  \"password\": \"{{password}}\"\n}"
            },
            "description": "Public self-registration. Role defaults to 'customer'."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 201', function(){ pm.response.to.have.status(201); });",
                  "var json = pm.response.json();",
                  "if (json && json.id) { pm.environment.set('user_id', json.id); }"
                ]
              }
            }
          ]
        },
        {
          "name": "POST /auth/register (admin can set role)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}{{api_prefix}}/auth/register",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "{{api_prefix}}",
                "auth",
                "register"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"full_name\": \"{{full_name}}\",\n  \"email\": \"user+{{$timestamp}}@example.com\",\n  \"password\": \"{{password}}\",\n  \"role\": \"{{role}}\"\n}"
            },
            "description": "Admin-only role assignment. Requires Bearer token of an admin."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 201', function(){ pm.response.to.have.status(201); });",
                  "var json = pm.response.json();",
                  "if (json && json.id) { pm.environment.set('user_id', json.id); }"
                ]
              }
            }
          ]
        },
        {
          "name": "POST /auth/login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}{{api_prefix}}/auth/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "{{api_prefix}}",
                "auth",
                "login"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\"\n}"
            },
            "description": "Login to retrieve a JWT. If you login as an admin, admin endpoints will work."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 200', function(){ pm.response.to.have.status(200); });",
                  "var json = pm.response.json();",
                  "if (json && json.token) { pm.environment.set('token', json.token); }",
                  "pm.test('Token received', function(){ pm.expect(pm.environment.get('token')).to.be.a('string'); });"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "GET /users (admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}{{api_prefix}}/users",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "{{api_prefix}}",
                "users"
              ]
            },
            "description": "List all users (admin only). Uses collection-level Bearer {{token}}."
          }
        },
        {
          "name": "GET /users/:id (self or admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}{{api_prefix}}/users/{{user_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "{{api_prefix}}",
                "users",
                "{{user_id}}"
              ]
            },
            "description": "Fetch a single user by id. Non-admins can only fetch their own."
          }
        },
        {
          "name": "PATCH /users/:id (self or admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}{{api_prefix}}/users/{{user_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "{{api_prefix}}",
                "users",
                "{{user_id}}"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone\": \"9999999999\",\n  \"address\": \"MG Road, Pune\"\n}"
            },
            "description": "Update profile. Admin can also change role by including {\"role\":\"admin|seller|customer\"}."
          }
        },
        {
          "name": "DELETE /users/:id (admin)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}{{api_prefix}}/users/{{user_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "{{api_prefix}}",
                "users",
                "{{user_id}}"
              ]
            },
            "description": "Delete a user (admin only)."
          }
        }
      ]
    },
    {
      "name": "Admin",
      "item": [
        {
          "name": "GET /admin/log-level",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}{{api_prefix}}/admin/log-level",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "{{api_prefix}}",
                "admin",
                "log-level"
              ]
            },
            "description": "Get current application log level (admin)."
          }
        },
        {
          "name": "PUT /admin/log-level",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}{{api_prefix}}/admin/log-level",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "{{api_prefix}}",
                "admin",
                "log-level"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"level\": \"debug\"\n}"
            },
            "description": "Set application log level. Body example: {\"level\":\"info\"} or {\"level\":\"debug\",\"sql_level\":\"info\",\"slow_ms\":100}"
          }
        }
      ]
    }
  ]
}